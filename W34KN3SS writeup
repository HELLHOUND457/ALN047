RECONNAISSANCE
1. Identify the target machine IP address by using netdiscover command.
netdiscover:
netdiscover is an active/passive arp reconnaissance tool, initially developed to gain
information about wireless networks without dhcp servers in wardriving scenarios. It can
also be used on switched networks. Built on top of libnet and libpcap, it can passively
detect online hosts or search for them by sending arp requests.
Furthermore, it can be used to inspect your network’s arp traffic, or find network
addresses using auto scan mode, which will scan for common local networks.


We got our target as 192.168.174.133
2. Nmap to identify the running services and ports on target machine.
nmap -sC -sV -oA w34kn3ss 192.168.174.133
Explanations:
-sC - Script scanning using the default script list.
-sV - Attempts version detection of protocols/applications during scan.
-oA - Output files in all formats
w34kn3ss - The name of the files for -oA output.
192.168.174.133 - The target machine’s IP address.


So, from nmap result we got that 22, 80 and 443 ports are open.
3. 80 and 443 ports are open, we explore the target IP address on the browser.

Browsing first to http://192.168.174.133 showed an Apache2 Ubuntu Default page – which is pretty much the same webpage when browsed using its HTTPs version.
4. While going trough the nmap result, we found that machine is using weakness.jth for its common name. So, let’s edit our hosts file entry again the machine IP address.
nano /etc/hosts


Now save the file.

5. Now let’s browse the page by using the common name i.e. weakness.jth.

Now we got the different result. It says that “keep following the white rabbit ” message was shown as well as an art rabbit. The message was shown that it was written by n30.

ENUMERATION
We didn’t find anything on the webpage, so we use gobuster to enumerate the directories on the web server.
gobuster -u http://weakness.jth -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50


We got that there is /private folder. Let’s browse it.

After browsing it, we found that there is two file one is notes.txt and another is mykey.pub.
When we opened notes.txt on the browser it gave us a clue about OpenSSL 0.98c-1 and that the public key we found was generated by it.


The mykey.pub file shows a public SSH rsa key.


mykey.pub was a SSH public key file and in notes.txt there was a note saying "this key was generated by openssl 0.9.8c-1". A quick google search on this openssl version revealed that it was vulnerable to "Debian OpenSSL Predictable PRNG" attack. In simpler words, we can get private SSH key with little help of public key. g0tmi1k has already generated a tons of private/public key pairs so I downloaded common SSH RSA keys from here and grep'ped the content of mykey.pub file in the list.
Or else we can also get the info from searchsploit openssl 0.9.8c-1

/usr/share/exploitdb/exploits/linux/remote

Now once the file has been downloaded, let’s extract it. Then the contents of the mykey.pub was then searched from the extracted files.
grep -r -l "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEApC39uhie9gZahjiiMo+k8DOqKLujcZMN1bESzSLT8H5jRGj8n1FFqjJw27Nu5JYTI73Szhg/uoeMOfECHNzGj7GtoMqwh38clgVjQ7Qzb47/kguAeWMUcUHrCBz9KsN+7eNTb5cfu0O0QgY+DoLxuwfVufRVNcvaNyo0VS1dAJWgDnskJJRD+46RlkUyVNhwegA0QRj9Salmpssp+z5wq7KBPL1S982QwkdhyvKg3dMy29j/C5sIIqM/mlqilhuidwo1ozjQlU2+yAVo5XrWDo0qVzzxsnTxB5JAfF7ifoDZp2yczZg+ZavtmfItQt1Vac1vSuBPCpTqkjE/4Iklgw=="

This resulted on finding that the 4161de56829de2fe64b9055711f531c1-2537.pub is the same with the mypub.key.


EXPLOITATION
It’s time to log into SSH using the public key and the username as n30.
ssh -i 4161de56829de2fe64b9055711f531c1-2537 n30@192.168.174.133

Now we are into the machine.
On enumerating the directories, we found two files code and user.txt. Let’s read the contents of user.txt.
cat user.txt
When we checked the file type of code, it came out to be a python compiled file. Let’s copy it to /var/www/html by this we can download this file into our system.
file code
cp code /var/www/html

We have downloaded the code file. Let’s decompile it by using uncompyle6. It takes only .pyc or .pyo file. So first rename the code file to code.pyc

On decompiling it, we got the username and password.
Username:  n30
Password: dMASDNB!!#B!#!#33

So now let's check sudo privileges for the user n30 with sudo -l command.

(ALL : ALL) ALL for user n30 which means user n30 can run all commands as root so why not sudo su - and get root?

Now we got the ROOT….! 
